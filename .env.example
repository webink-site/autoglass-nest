# =================================
# AUTOGLASS PRODUCTION ENVIRONMENT
# =================================

# Node.js Environment
NODE_ENV=production
PORT=3001

# Database Configuration (PostgreSQL)
POSTGRES_DB=aglass
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_super_secure_postgres_password_here

# Полная строка подключения к БД (генерируется автоматически в docker-compose)
# DATABASE_URL=postgresql://postgres:password@postgres:5432/aglass?schema=public

# JWT Configuration
JWT_SECRET=your_very_secure_jwt_secret_key_at_least_32_chars_long
JWT_EXPIRES_IN=7d

# Redis Configuration (для кеширования)
REDIS_PASSWORD=your_secure_redis_password

# File Upload Configuration
UPLOAD_FOLDER=uploads
MAX_FILE_SIZE=10485760  # 10MB в байтах

# CORS Configuration
FRONTEND_URL=https://your-domain.com
ALLOWED_ORIGINS=https://your-domain.com,https://www.your-domain.com

# Email Configuration (если планируете отправку email)
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=your-email@example.com
# SMTP_PASS=your-email-password
# FROM_EMAIL=noreply@your-domain.com

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=logs/app.log

# Security Headers
SESSION_SECRET=your_session_secret_key_here

# Rate Limiting
API_RATE_LIMIT=100  # requests per minute
AUTH_RATE_LIMIT=5   # auth requests per minute

# External Services (если используете)
# GOOGLE_API_KEY=your_google_api_key
# TELEGRAM_BOT_TOKEN=your_telegram_bot_token

# Monitoring & Analytics
# SENTRY_DSN=https://your-sentry-dsn-here
# GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX

# Domain Configuration
DOMAIN=your-domain.com
SSL_EMAIL=admin@your-domain.com

# =================================
# ВАЖНЫЕ ЗАМЕЧАНИЯ:
# =================================

# 1. Замените ВСЕ значения "your_*" на реальные безопасные значения
# 2. Используйте сложные пароли длиной не менее 16 символов
# 3. JWT_SECRET должен быть случайной строкой длиной не менее 32 символов
# 4. Никогда не коммитьте файл .env в git!
# 5. Используйте разные пароли для всех сервисов
# 6. После развертывания удалите этот комментарий

# Генерация случайных паролей:
# openssl rand -base64 32
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
